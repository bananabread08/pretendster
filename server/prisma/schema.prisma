// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  email        String    @unique
  username     String
  password     String
  profileImg   String    @default("https://api.dicebear.com/6.x/lorelei/svg")
  bannerImg    String    @default("https://img.freepik.com/free-vector/hand-painted-watercolor-pastel-sky-background_23-2148902771.jpg?w=2000")
  location     String?
  status       String?
  bio          String?
  posts        Post[]
  Comment      Comment[]
  followers    User[]    @relation("UserFollows", fields: [followerIDs], references: [id])
  followerIDs  String[]  @db.ObjectId
  follows      User[]    @relation("UserFollows", fields: [followingIDs], references: [id])
  followingIDs String[]  @db.ObjectId
  likedPostIDs String[]  @db.ObjectId
  likedPosts   Post[]    @relation("UserLikes", fields: [likedPostIDs], references: [id])
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.ObjectId
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     String[]  @db.ObjectId
  likedBy   User[]    @relation("UserLikes", fields: [likes], references: [id])
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
